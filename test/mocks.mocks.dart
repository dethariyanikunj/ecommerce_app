// Mocks generated by Mockito 5.4.4 from annotations
// in test/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i5;
import 'package:get/get.dart' as _i4;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:test/features/product_catalog/data/models/product_model.dart'
    as _i6;
import 'package:test/features/product_catalog/domain/repositories/product_repository.dart'
    as _i2;
import 'package:test/features/product_catalog/domain/usecases/get_products.dart'
    as _i3;
import 'package:test/features/product_catalog/presentation/controllers/product_controller.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductRepository_0 extends _i1.SmartFake
    implements _i2.ProductRepository {
  _FakeProductRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetProducts_1 extends _i1.SmartFake implements _i3.GetProducts {
  _FakeGetProducts_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_2<E> extends _i1.SmartFake implements _i4.RxList<E> {
  _FakeRxList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_3 extends _i1.SmartFake implements _i4.RxBool {
  _FakeRxBool_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxString_4 extends _i1.SmartFake implements _i4.RxString {
  _FakeRxString_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScrollController_5 extends _i1.SmartFake
    implements _i5.ScrollController {
  _FakeScrollController_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_6 extends _i1.SmartFake
    implements _i5.TextEditingController {
  _FakeTextEditingController_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxDouble_7 extends _i1.SmartFake implements _i4.RxDouble {
  _FakeRxDouble_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_8<T> extends _i1.SmartFake
    implements _i4.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductModel_9 extends _i1.SmartFake implements _i6.ProductModel {
  _FakeProductModel_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetProducts].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProducts extends _i1.Mock implements _i3.GetProducts {
  MockGetProducts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProductRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeProductRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ProductRepository);

  @override
  _i7.Future<List<_i6.ProductModel>> call({bool? fromCache = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#fromCache: fromCache},
        ),
        returnValue:
            _i7.Future<List<_i6.ProductModel>>.value(<_i6.ProductModel>[]),
      ) as _i7.Future<List<_i6.ProductModel>>);
}

/// A class which mocks [ProductController].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductController extends _i1.Mock implements _i8.ProductController {
  MockProductController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetProducts get getProducts => (super.noSuchMethod(
        Invocation.getter(#getProducts),
        returnValue: _FakeGetProducts_1(
          this,
          Invocation.getter(#getProducts),
        ),
      ) as _i3.GetProducts);

  @override
  _i4.RxList<_i6.ProductModel> get carouselProducts => (super.noSuchMethod(
        Invocation.getter(#carouselProducts),
        returnValue: _FakeRxList_2<_i6.ProductModel>(
          this,
          Invocation.getter(#carouselProducts),
        ),
      ) as _i4.RxList<_i6.ProductModel>);

  @override
  _i4.RxList<_i6.ProductModel> get products => (super.noSuchMethod(
        Invocation.getter(#products),
        returnValue: _FakeRxList_2<_i6.ProductModel>(
          this,
          Invocation.getter(#products),
        ),
      ) as _i4.RxList<_i6.ProductModel>);

  @override
  List<_i6.ProductModel> get allProducts => (super.noSuchMethod(
        Invocation.getter(#allProducts),
        returnValue: <_i6.ProductModel>[],
      ) as List<_i6.ProductModel>);

  @override
  List<_i6.ProductModel> get filteredProducts => (super.noSuchMethod(
        Invocation.getter(#filteredProducts),
        returnValue: <_i6.ProductModel>[],
      ) as List<_i6.ProductModel>);

  @override
  set filteredProducts(List<_i6.ProductModel>? _filteredProducts) =>
      super.noSuchMethod(
        Invocation.setter(
          #filteredProducts,
          _filteredProducts,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxBool get initialLoading => (super.noSuchMethod(
        Invocation.getter(#initialLoading),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#initialLoading),
        ),
      ) as _i4.RxBool);

  @override
  _i4.RxBool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#isLoading),
        ),
      ) as _i4.RxBool);

  @override
  _i4.RxBool get hasMore => (super.noSuchMethod(
        Invocation.getter(#hasMore),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#hasMore),
        ),
      ) as _i4.RxBool);

  @override
  _i4.RxString get searchText => (super.noSuchMethod(
        Invocation.getter(#searchText),
        returnValue: _FakeRxString_4(
          this,
          Invocation.getter(#searchText),
        ),
      ) as _i4.RxString);

  @override
  _i4.RxBool get isFilterApplied => (super.noSuchMethod(
        Invocation.getter(#isFilterApplied),
        returnValue: _FakeRxBool_3(
          this,
          Invocation.getter(#isFilterApplied),
        ),
      ) as _i4.RxBool);

  @override
  _i5.ScrollController get scrollController => (super.noSuchMethod(
        Invocation.getter(#scrollController),
        returnValue: _FakeScrollController_5(
          this,
          Invocation.getter(#scrollController),
        ),
      ) as _i5.ScrollController);

  @override
  _i5.TextEditingController get searchController => (super.noSuchMethod(
        Invocation.getter(#searchController),
        returnValue: _FakeTextEditingController_6(
          this,
          Invocation.getter(#searchController),
        ),
      ) as _i5.TextEditingController);

  @override
  int get page => (super.noSuchMethod(
        Invocation.getter(#page),
        returnValue: 0,
      ) as int);

  @override
  set page(int? _page) => super.noSuchMethod(
        Invocation.setter(
          #page,
          _page,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get limit => (super.noSuchMethod(
        Invocation.getter(#limit),
        returnValue: 0,
      ) as int);

  @override
  _i4.RxDouble get minPrice => (super.noSuchMethod(
        Invocation.getter(#minPrice),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#minPrice),
        ),
      ) as _i4.RxDouble);

  @override
  set minPrice(_i4.RxDouble? _minPrice) => super.noSuchMethod(
        Invocation.setter(
          #minPrice,
          _minPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get maxPrice => (super.noSuchMethod(
        Invocation.getter(#maxPrice),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#maxPrice),
        ),
      ) as _i4.RxDouble);

  @override
  set maxPrice(_i4.RxDouble? _maxPrice) => super.noSuchMethod(
        Invocation.setter(
          #maxPrice,
          _maxPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get minRating => (super.noSuchMethod(
        Invocation.getter(#minRating),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#minRating),
        ),
      ) as _i4.RxDouble);

  @override
  set minRating(_i4.RxDouble? _minRating) => super.noSuchMethod(
        Invocation.setter(
          #minRating,
          _minRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get maxRating => (super.noSuchMethod(
        Invocation.getter(#maxRating),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#maxRating),
        ),
      ) as _i4.RxDouble);

  @override
  set maxRating(_i4.RxDouble? _maxRating) => super.noSuchMethod(
        Invocation.setter(
          #maxRating,
          _maxRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get globalMinPrice => (super.noSuchMethod(
        Invocation.getter(#globalMinPrice),
        returnValue: 0.0,
      ) as double);

  @override
  set globalMinPrice(double? _globalMinPrice) => super.noSuchMethod(
        Invocation.setter(
          #globalMinPrice,
          _globalMinPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get globalMaxPrice => (super.noSuchMethod(
        Invocation.getter(#globalMaxPrice),
        returnValue: 0.0,
      ) as double);

  @override
  set globalMaxPrice(double? _globalMaxPrice) => super.noSuchMethod(
        Invocation.setter(
          #globalMaxPrice,
          _globalMaxPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get globalMinRating => (super.noSuchMethod(
        Invocation.getter(#globalMinRating),
        returnValue: 0.0,
      ) as double);

  @override
  set globalMinRating(double? _globalMinRating) => super.noSuchMethod(
        Invocation.setter(
          #globalMinRating,
          _globalMinRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  double get globalMaxRating => (super.noSuchMethod(
        Invocation.getter(#globalMaxRating),
        returnValue: 0.0,
      ) as double);

  @override
  set globalMaxRating(double? _globalMaxRating) => super.noSuchMethod(
        Invocation.setter(
          #globalMaxRating,
          _globalMaxRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get tempMinPrice => (super.noSuchMethod(
        Invocation.getter(#tempMinPrice),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#tempMinPrice),
        ),
      ) as _i4.RxDouble);

  @override
  set tempMinPrice(_i4.RxDouble? _tempMinPrice) => super.noSuchMethod(
        Invocation.setter(
          #tempMinPrice,
          _tempMinPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get tempMaxPrice => (super.noSuchMethod(
        Invocation.getter(#tempMaxPrice),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#tempMaxPrice),
        ),
      ) as _i4.RxDouble);

  @override
  set tempMaxPrice(_i4.RxDouble? _tempMaxPrice) => super.noSuchMethod(
        Invocation.setter(
          #tempMaxPrice,
          _tempMaxPrice,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get tempMinRating => (super.noSuchMethod(
        Invocation.getter(#tempMinRating),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#tempMinRating),
        ),
      ) as _i4.RxDouble);

  @override
  set tempMinRating(_i4.RxDouble? _tempMinRating) => super.noSuchMethod(
        Invocation.setter(
          #tempMinRating,
          _tempMinRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.RxDouble get tempMaxRating => (super.noSuchMethod(
        Invocation.getter(#tempMaxRating),
        returnValue: _FakeRxDouble_7(
          this,
          Invocation.getter(#tempMaxRating),
        ),
      ) as _i4.RxDouble);

  @override
  set tempMaxRating(_i4.RxDouble? _tempMaxRating) => super.noSuchMethod(
        Invocation.setter(
          #tempMaxRating,
          _tempMaxRating,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_8<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i4.InternalFinalCallback<void>);

  @override
  _i4.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_8<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i4.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> loadProducts() => (super.noSuchMethod(
        Invocation.method(
          #loadProducts,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void onSearchChanged(String? value) => super.noSuchMethod(
        Invocation.method(
          #onSearchChanged,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openFilterSheetDefaults() => super.noSuchMethod(
        Invocation.method(
          #openFilterSheetDefaults,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void applyTempFilters() => super.noSuchMethod(
        Invocation.method(
          #applyTempFilters,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetFilters() => super.noSuchMethod(
        Invocation.method(
          #resetFilters,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.ProductModel dummyDataForSkeleton() => (super.noSuchMethod(
        Invocation.method(
          #dummyDataForSkeleton,
          [],
        ),
        returnValue: _FakeProductModel_9(
          this,
          Invocation.method(
            #dummyDataForSkeleton,
            [],
          ),
        ),
      ) as _i6.ProductModel);

  @override
  void navigateToDetailScreen(_i6.ProductModel? product) => super.noSuchMethod(
        Invocation.method(
          #navigateToDetailScreen,
          [product],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListener(_i9.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i10.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Disposer addListenerId(
    Object? key,
    _i9.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i9.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
